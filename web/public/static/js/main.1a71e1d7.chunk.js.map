{"version":3,"sources":["elements/AxesFields.js","elements/LabelledText.js","form/ReadForm.js","form/QueryResult.js","form/WriteForm.js","elements/Radio.js","elements/ModeSelector.js","App.js","serviceWorker.js","index.js"],"names":["AxesFields","props","data","Object","objectSpread","react_default","a","createElement","className","Range","assign","wrapper","name","onChange","lcg","tcg","vcg","lm","tm","vm","WrapperTag","type","id","value","min","max","LabelledRange","htmlFor","label","LabelledText","textField","Input","field","LabelledText_LabelledText","TextArea","ReadForm","onSubmit","Heading","Spec_Heading","Sorting_Nature_of_Info_Produced","Features","Model","Hyperlink","Source","Weight_Per_Unit","Quantity","Material_And_Color","Size","AxesFields_AxesFields","axes","QueryResult","console","log","this","result","main_default","src","React","Component","WriteForm","input","Radio","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checked","selected","DBRadio","choice","e","src_elements_Radio","ReadWriteRadio","required","ModeSelector","queryMode","App","state","dbChoice","read","heading","specHeading","gcmna","features","location","category","material","manufacturer","size","weightOne","quantity","write","handleModeChange","bind","assertThisInitialized","handleWriteChange","handleSubmit","handleReadChange","event","setState","defineProperty","target","includes","slice","bound","_this2","preventDefault","query","mode","source","args","JSON","parse","error","alert","Axios","post","then","response","form","ReadForm_ReadForm","src_form_WriteForm","elements_ModeSelector","src_form_QueryResult","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1a71e1d7.chunk.js","sourcesContent":["import React from 'react'\nimport './AxesFields.css';\n\nfunction AxesFields(props) {\n\tconst data = {...props.data};\n\treturn (\n\t\t<table className=\"axes-fields\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th></th>\n\t\t\t\t\t<th>Longitudinal</th>\n\t\t\t\t\t<th>Transverse</th>\n\t\t\t\t\t<th>Vertical</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody className=\"axis-fields\">\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Center of Gravity</th>\n\t\t\t\t\t<Range wrapper=\"td\" name=\"axis-lcg\" onChange={props.onChange} {...data.lcg}/>\n\t\t\t\t\t<Range wrapper=\"td\" name=\"axis-tcg\" onChange={props.onChange} {...data.tcg}/>\n\t\t\t\t\t<Range wrapper=\"td\" name=\"axis-vcg\" onChange={props.onChange} {...data.vcg}/>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Moment of Inertia</th>\n\t\t\t\t\t<Range wrapper=\"td\" name=\"axis-l_m\" onChange={props.onChange} {...data.lm}/>\n\t\t\t\t\t<Range wrapper=\"td\" name=\"axis-t_m\" onChange={props.onChange} {...data.tm}/>\n\t\t\t\t\t<Range wrapper=\"td\" name=\"axis-v_m\" onChange={props.onChange} {...data.vm}/>\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t);\n}\nfunction Range(props) {\n\tconst WrapperTag = (props.wrapper ? props.wrapper : \"div\");\n\tconst name = props.name;\n\treturn (\n\t\t<WrapperTag className=\"Range\">\n\t\t\t<input\n\t\t\t\ttype=\"number\"\n\t\t\t\tname={name + \"-min\"}\n\t\t\t\tid={name + \"-min\"}\n\t\t\t\tvalue={props.min}\n\t\t\t\tonChange={props.onChange}\n\t\t\t/>\n\t\t\t&nbsp;to&nbsp;\n\t\t\t<input\n\t\t\t\ttype=\"number\"\n\t\t\t\tname={name + \"-max\"}\n\t\t\t\tid={name + \"-max\"}\n\t\t\t\tvalue={props.max}\n\t\t\t\tonChange={props.onChange}\n\t\t\t/>\n\t\t</WrapperTag>\n\t);\n}\nfunction LabelledRange(props) {\n\tconst htmlFor = props.name + \"-range\";\n\n\treturn(\n\t\t<div className=\"LabelledRange\">\n\t\t\t<label htmlFor={htmlFor}>\n\t\t\t\t{props.label}\n\t\t\t</label>\n\t\t\t<Range\n\t\t\t\tname={props.name}\n\t\t\t\tmin={props.min}\n\t\t\t\tmax={props.max}\n\t\t\t\tonChange={props.onChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport {\n\tAxesFields,\n\tRange,\n\tLabelledRange\n};","import React from 'react';\nimport './LabelledText.css';\n\nfunction LabelledText(props) {\n\tconst htmlFor = props.name + \"-field\";\n\tlet className = \"LabelledText\";\n\tif (props.className) {\n\t\tclassName += \" \" + props.className;\n\t}\n\treturn(\n\t\t<div className={className}>\n\t\t\t<label htmlFor={htmlFor} className={className}>\n\t\t\t\t{props.label}\n\t\t\t</label>\n\t\t\t{props.textField}\n\t\t</div>\n\t);\n}\n\nfunction Input(props) {\n\tconst htmlFor = props.name + \"-field\";\n\tconst field = (\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tname={\"text_\" + props.name}\n\t\t\tid={htmlFor}\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.onChange}\n\t\t/>\n\t);\n\treturn(\n\t\t<LabelledText\n\t\t\tname={props.name}\n\t\t\tclassName=\"Input\"\n\t\t\tlabel={props.label}\n\t\t\ttextField={field}\n\t\t/>\n\t);\n}\nfunction TextArea(props) {\n\tconst htmlFor = props.name + \"-field\";\n\tconst field = (\n\t\t<textarea\n\t\t\tname={props.name}\n\t\t\tid={htmlFor}\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.onChange}\n\t\t/>\n\t);\n\treturn(\n\t\t<LabelledText\n\t\t\tname={props.name}\n\t\t\tclassName=\"TextArea\"\n\t\t\tlabel={props.label}\n\t\t\ttextField={field}\n\t\t/>\n\t);\n}\n\nexport {\n\tInput,\n\tTextArea\n}","import React from 'react';\nimport {AxesFields, LabelledRange} from \"../elements/AxesFields\";\nimport { Input } from \"../elements/LabelledText\";\nimport './ReadForm.css';\n\nexport default function ReadForm(props) {\n\tconst data = props.data;\n\t/* const weightOne = {\n\t\tmin: data[\"weightOne-min\"],\n\t\tmax: data[\"weightOne-max\"],\n\t};\n\tconst size = {\n\t\tmin: data[\"size-min\"],\n\t\tmax: data[\"size-max\"],\n\t};\n\tconst quantity = {\n\t\tmin: data[\"quantity-min\"],\n\t\tmax: data[\"quantity-max\"],\n\t};\n\tconst axes = {\n\t\tlcg: {min: data[\"lcg-min\"], max: data[\"lcg-max\"]},\n\t\ttcg: {min: data[\"tcg-min\"], max: data[\"tcg-max\"]},\n\t\tvcg: {min: data[\"vcg-min\"], max: data[\"vcg-max\"]},\n\t\tlm: {min: data[\"lm-min\"], max: data[\"lm-max\"]},\n\t\ttm: {min: data[\"tm-min\"], max: data[\"tm-max\"]},\n\t\tvm: {min: data[\"vm-min\"], max: data[\"vm-max\"]},\n\t} */\n\treturn (\n\t\t<form onSubmit={props.onSubmit}>\n\t\t\t<div className=\"textFields\">\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Heading\"\n\t\t\t\t\tlabel=\"Heading:\"\n\t\t\t\t\tvalue={data.Heading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Spec_Heading\"\n\t\t\t\t\tlabel=\"Spec Heading:\"\n\t\t\t\t\tvalue={data.Spec_Heading}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Sorting_Nature_of_Info_Produced\"\n\t\t\t\t\tlabel=\"Sorting Nature of Info Produced ('Spec Item' for part):\"\n\t\t\t\t\tvalue={data.Sorting_Nature_of_Info_Produced}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Features\"\n\t\t\t\t\tlabel=\"Features (Comma separated):\"\n\t\t\t\t\tvalue={data.Features}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Model\"\n\t\t\t\t\tlabel=\"Model Number:\"\n\t\t\t\t\tvalue={data.Model}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Hyperlink\"\n\t\t\t\t\tlabel=\"Hyperlink:\"\n\t\t\t\t\tvalue={data.Hyperlink}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Source\"\n\t\t\t\t\tlabel=\"Source:\"\n\t\t\t\t\tvalue={data.Source}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<LabelledRange\n\t\t\t\t\tname=\"Weight_Per_Unit\"\n\t\t\t\t\tlabel=\"Weight Per Unit\"\n\t\t\t\t\tvalue={data.Weight_Per_Unit}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<LabelledRange\n\t\t\t\t\tname=\"Quantity\"\n\t\t\t\t\tlabel=\"Quantity\"\n\t\t\t\t\tvalue={data.Quantity}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tname=\"Material_And_Color\"\n\t\t\t\t\tlabel=\"Material / Color:\"\n\t\t\t\t\tvalue={data.Material_And_Color}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t\t<LabelledRange\n\t\t\t\t\tname=\"Size\"\n\t\t\t\t\tlabel=\"Size\"\n\t\t\t\t\tvalue={data.Size}\n\t\t\t\t\tonChange={props.onChange}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<AxesFields\n\t\t\t\tvalue={data.axes}\n\t\t\t\tonChange={props.onChange}\n\t\t\t/>\n\t\t\t<input type=\"submit\" value=\"Submit\"/>\n\t\t</form>\n\t);\n}","import React from 'react';\nimport ReactJson from \"react-json-view\";\nimport './QueryResult.css';\n\nclass QueryResult extends React.Component {\n\trender() {\n\t\tconsole.log(this.props.result);\n\t\tif (typeof this.props.result !== 'string') {\n\t\t\treturn (\n\t\t\t\t<ReactJson src={this.props.result} />\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<pre className=\"QueryResult\">{this.props.result}</pre>\n\t\t\t);\n\t\t}\n\t}\n}\nexport default QueryResult;","import React from 'react';\nimport {TextArea} from \"../elements/LabelledText\";\nimport './WriteForm.css';\n\nclass WriteForm extends React.Component {\n\trender() {\n\t\treturn(\n\t\t\t<form onSubmit={this.props.onSubmit} className=\"WriteForm\">\n\t\t\t\t<TextArea\n\t\t\t\t\tname=\"input-json\"\n\t\t\t\t\tlabel=\"Insert JSON of data to be written.\"\n\t\t\t\t\tvalue={this.props.input}\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"Submit\"/>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nexport default WriteForm;","import React from 'react';\nimport './Radio.css';\n\nclass Radio extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.htmlFor = \"radio-\" + props.value;\n\t}\n\trender() {\n\t\tconst checked = this.props.selected ? \"checked\" : null;\n\t\treturn (\n\t\t\t<div className=\"Radio\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"radio\"\n\t\t\t\t\tname={this.props.name || null}\n\t\t\t\t\tid={this.htmlFor}\n\t\t\t\t\tvalue={this.props.value}\n\t\t\t\t\tchecked={checked}\n\t\t\t\t\tonChange={this.props.onChange}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor={this.htmlFor} label={this.props.label}>\n\t\t\t\t\t{this.props.label}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Radio;","import React from 'react';\nimport Radio from \"./Radio\";\nimport './ModeSelector.css';\n\nfunction DBRadio(props) {\n\tconst name = props.name;\n\tconst choice = props.choice;\n\tconst onChange = (e) => props.onChange(e);\n\treturn (\n\t\t<div className=\"DBRadio\">\n\t\t\t<Radio\n\t\t\t\tname={name}\n\t\t\t\tvalue=\"sql\"\n\t\t\t\tlabel=\"MySQL\"\n\t\t\t\tselected={choice === \"sql\"}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<Radio\n\t\t\t\tname={name}\n\t\t\t\tvalue=\"mongo\"\n\t\t\t\tlabel=\"MongoDB\"\n\t\t\t\tselected={choice === \"mongo\"}\n\t\t\t\tonChange={onChange}\t\n\t\t\t/>\n\t\t\t<Radio\n\t\t\t\tname={name}\n\t\t\t\tvalue=\"both\"\n\t\t\t\tlabel=\"Both (Performance Comparison)\"\n\t\t\t\tselected={choice === \"both\"}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nfunction ReadWriteRadio(props) {\n\tconst name = props.name;\n\tconst choice = props.choice;\n\tconst onChange = (e) => props.onChange(e);\n\treturn (\n\t\t<div className=\"ReadWriteRadio\">\n\t\t\t<Radio\n\t\t\t\tname={name}\n\t\t\t\tvalue=\"read\"\n\t\t\t\tlabel=\"Read\"\n\t\t\t\trequired={true}\n\t\t\t\tselected={choice === \"read\"}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t\t<Radio\n\t\t\t\tname={name}\n\t\t\t\tvalue=\"write\"\n\t\t\t\tlabel=\"Write\"\n\t\t\t\trequired={true}\n\t\t\t\tselected={choice === \"write\"}\n\t\t\t\tonChange={onChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nfunction ModeSelector(props) {\n\t// const onChange = (e) => props.onChange(e);\n\treturn (\n\t\t<div className=\"ModeSelector\">\n\t\t\t<DBRadio\n\t\t\t\tname=\"dbChoice\"\n\t\t\t\tchoice={props.choice}\n\t\t\t\tonChange={props.onChange}\n\t\t\t/>\n\t\t\t<ReadWriteRadio\n\t\t\t\tname=\"queryMode\"\n\t\t\t\tchoice={props.queryMode}\n\t\t\t\tonChange={props.onChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport default ModeSelector;","import React from 'react';\nimport './App.css';\nimport ReadForm from './form/ReadForm';\nimport QueryResult from './form/QueryResult';\nimport WriteForm from \"./form/WriteForm\";\nimport ModeSelector from \"./elements/ModeSelector\";\nimport Axios from 'axios';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tqueryMode: 'read',\n\t\t\tdbChoice: 'sql',\n\t\t\t//Read\n\t\t\tread: {\n\t\t\t\theading: '',\n\t\t\t\tspecHeading: '',\n\t\t\t\tgcmna: \"\",\n\t\t\t\tfeatures: \"\",\n\t\t\t\tlocation: \"\",\n\t\t\t\tcategory: \"\",\n\t\t\t\tmaterial: \"\",\n\t\t\t\tmanufacturer: \"\",\n\t\t\t\tsize: {min: -1, max: -1},\n\t\t\t\tweightOne: {min: -1, max: -1},\n\t\t\t\tquantity: {min: -1, max: -1},\n\t\t\t\taxes: {\n\t\t\t\t\tlcg: {min: -1, max: -1},\n\t\t\t\t\ttcg: {min: -1, max: -1},\n\t\t\t\t\tvcg: {min: -1, max: -1},\n\t\t\t\t\tlm: {min: -1, max: -1},\n\t\t\t\t\ttm: {min: -1, max: -1},\n\t\t\t\t\tvm: {min: -1, max: -1},\n\t\t\t\t}\n\t\t\t},\n\t\t\t//Write\n\t\t\twrite: \"\",\n\t\t};\n\t\tthis.handleModeChange = this.handleModeChange.bind(this);\n\t\tthis.handleWriteChange = this.handleWriteChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleReadChange = this.handleReadChange.bind(this);\n\t}\n\thandleModeChange(event) {\n\t\t// console.log(event.target);\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value\n\t\t});\n\t\t// console.log({[event.target.name]: event.target.value});\n\t\tconsole.log(this.state);\n\t}\n\thandleReadChange(event) {\n\t\tconst name = event.target.name;\n\t\tconst value = event.target.value;\n\t\tlet read = this.state.read;\n\t\t// Check if range is text\n\t\tif (name.includes(\"text_\")) {\n\n\t\t\tread[name.slice(5)] = event.target.value;\n\t\t} else if (name.includes(\"axis-\")) {\n\t\t\tconst field = name.slice(5, 8);\n\t\t\tconst bound = name.slice(-3);\n\t\t\tread.axes[field][bound] = value;\n\t\t} else {\n\t\t\tconst field = name.slice(0, -4);\n\t\t\tconst bound = name.slice(-3);\n\t\t\tread[field][bound] = value;\n\t\t}\n\t\tthis.setState({ read: read });\n\t\t// console.log(read);\n\t}\n\thandleWriteChange(event) {\n\t\tthis.setState({write: event.target.value});\n\t}\n\thandleSubmit(event) {\n\t\tevent.preventDefault();\n\t\t// Two cases. Read => this is a form submit. Write => Send Textarea json\n\t\tlet query = {\n\t\t\tmode: this.state.queryMode,\n\t\t\tsource: this.state.dbChoice,\n\t\t};\n\t\tif (this.state.queryMode === 'read') { // Read\n\t\t\tquery.args = this.state.read;\n\t\t} else { // write\n\t\t\ttry {\n\t\t\t\tquery.args = JSON.parse(this.state.write);\n\t\t\t} catch (error) {\n\t\t\t\talert(\"Invalid JSON!\");\n\t\t\t\tthis.setState({result: error});\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t// Okay, query built. Send it off to our controller!\n\t\t// const showResult = (json) => this.setState({result: json});\n\t\tAxios.post('/query', query)\n\t\t\t.then(response => {\n\t\t\t\t// this.setState({result: JSON.stringify(response.data, null, 2)});\n\t\t\t\tthis.setState({result: response.data});\n\t\t\t\tconsole.log({...response.data});\n\t\t\t})\n\t\t\t// .error(error => this.setState({result: error}))\n\t\t;\n\t}\n\trender() {\n\t\tlet form;\n\t\t// Decide which form to display based on Query mode\n\t\tif (this.state.queryMode === 'read') {\n\t\t\tform = (\n\t\t\t\t<ReadForm\n\t\t\t\t\tdata={this.state.read}\n\t\t\t\t\tonChange={this.handleReadChange}\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t/>\n\t\t\t);\n\t\t} else {\n\t\t\tform = (\n\t\t\t\t<WriteForm\n\t\t\t\t\tinput={this.state.write}\n\t\t\t\t\tonChange={this.handleWriteChange}\n\t\t\t\t\tonSubmit={this.handleSubmit}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<h1>Boat Data Store Query App</h1>\n\t\t\t\t</header>\n\t\t\t\t<ModeSelector\n\t\t\t\t\tchoice={this.state.dbChoice}\n\t\t\t\t\tqueryMode={this.state.queryMode}\n\t\t\t\t\tonChange={this.handleModeChange}\n\t\t\t\t/>\n\t\t\t\t<main>\n\t\t\t\t\t{form}\n\t\t\t\t\t<QueryResult result={this.state.result} />\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}