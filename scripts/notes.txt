rs.initiate({_id:"s0",members:[{_id:0,host:"s0rs0"},{_id:1,host:"s0rs1"},{_id:2,host:"s0rs2"}]})
rs.initiate({_id:"s0",members:[{_id:0,host:"10.0.0.3"},{_id:1,host:"10.0.0.4"},{_id:2,host:"10.0.0.5"}]})


to yum install mongodb:

sudo rm -rf /etc/yum.repos.d/mongod*

sudo yum clean all

again create repo file

sudo vi /etc/yum.repos.d/mongodb-org-3.4.repo

[mongodb-org-3.4]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.4/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc

sudo yum install -y mongodb-org


to run mongos instead of mongod:

docker container run -p 27017:27017 --entrypoint mongos mongo --configdb conf/localhost:27017



to get the ip address and name of each running instance:

aws ec2 describe-instances --filter "Name=instance-state-name,Values=running" --query "Reservations[].Instances[].[PublicIpAddress, Tags[?Key=='Name'].Value|[0]]" --output text

output:
34.214.1.154    s0rs0
34.218.247.239  s0rs1

to put them into an associative array (map) where arr[s0rs0] = 34.214.1.154

declare -A name_to_ip_map=(); while read -r a b; do name_to_ip_map["$b"]="$a"; done < <(aws ec2 describe-instances --filter "Name=instance-state-name,Values=running" --query "Reservations[].Instances[].[PublicIpAddress, Tags[?Key=='Name'].Value|[0]]" --output text)

echo ${name_to_ip_map["s0rs0"]}

output: 34.214.1.154