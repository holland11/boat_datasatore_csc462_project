version: "3"
services:
    # shard 0
    s0rs0:
        hostname: s0rs0
        container_name: s0rs0
        image: mongo
        restart: always
        command: "--port 27017 --replSet s0 --shardsvr --smallfiles"
    s0rs1:
        hostname: s0rs1
        container_name: s0rs1
        image: mongo
        restart: always
        command: "--port 27017 --replSet s0 --shardsvr --smallfiles"
    s0rs2:
        hostname: s0rs2
        container_name: s0rs2
        image: mongo
        restart: always
        command: "--port 27017 --replSet s0 --shardsvr --smallfiles"
    s0conf:
        hostname: s0conf
        container_name: s0conf
        image: rs_conf
        restart: on-failure
        command: /bin/bash -c "shard=s0 /usr/bin/init.sh"
        depends_on:
            - s0rs0
            - s0rs1
            - s0rs2
            
    # shard 1
    s1rs0:
        hostname: s1rs0
        container_name: s1rs0
        image: mongo
        restart: always
        command: "--port 27017 --replSet s1 --shardsvr --smallfiles"
    s1rs1:
        hostname: s1rs1
        container_name: s1rs1
        image: mongo
        restart: always
        command: "--port 27017 --replSet s1 --shardsvr --smallfiles"
    s1rs2:
        hostname: s1rs2
        container_name: s1rs2
        image: mongo
        restart: always
        command: "--port 27017 --replSet s1 --shardsvr --smallfiles"
    s1conf:
        hostname: s1conf
        container_name: s1conf
        image: rs_conf
        restart: on-failure
        command: /bin/bash -c "shard=s1 /usr/bin/init.sh"
        depends_on:
            - s1rs0
            - s1rs1
            - s1rs2
            
    # shard 2
    s2rs0:
        hostname: s2rs0
        container_name: s2rs0
        image: mongo
        restart: always
        command: "--port 27017 --replSet s2 --shardsvr --smallfiles"
    s2rs1:
        hostname: s2rs1
        container_name: s2rs1
        image: mongo
        restart: always
        command: "--port 27017 --replSet s2 --shardsvr --smallfiles"
    s2rs2:
        hostname: s2rs2
        container_name: s2rs2
        image: mongo
        restart: always
        command: "--port 27017 --replSet s2 --shardsvr --smallfiles"
    s2conf:
        hostname: s2conf
        container_name: s2conf
        image: rs_conf
        restart: on-failure
        command: /bin/bash -c "shard=s2 /usr/bin/init.sh"
        depends_on:
            - s2rs0
            - s2rs1
            - s2rs2
            
    # config replica set
    confrs0:
        hostname: confrs0
        container_name: confrs0
        image: mongo
        restart: always
        command: "--port 27017 --replSet conf --configsvr --smallfiles"
    confrs1:
        hostname: confrs1
        container_name: confrs1
        image: mongo
        restart: always
        command: "--port 27017 --replSet conf --configsvr --smallfiles"
    confrs2:
        hostname: confrs2
        container_name: confrs2
        image: mongo
        restart: always
        command: "--port 27017 --replSet conf --configsvr --smallfiles"
    confconf:
        hostname: confconf
        container_name: confconf
        image: rs_conf
        restart: on-failure
        command: /bin/bash -c "shard=conf /usr/bin/init.sh"
        depends_on:
            - confrs0
            - confrs1
            - confrs2
        
    # mongo router
    mongos0:
        hostname: mongos0
        container_name: mongos0
        image: mongo
        entrypoint: mongos
        command: "--bind_ip_all --port 27017 --configdb conf/confrs0:27017,confrs1:27017,confrs2:27017"
        ports:
            - "27017:27017"
        depends_on:
            - confconf
    mongos0conf:
        hostname: mongos0conf
        container_name: mongos0conf
        image: mongos_conf
        restart: on-failure
        command: /bin/bash -c "/usr/bin/init.sh"
        depends_on:
            - mongos0
        
# version: "3"
# services:
    # s0:
        # hostname: s0
        # image: mongo
        # expose:
            # - "27017"
        # command: "--port 27017 --replSet s0"
        # deploy:
            # mode: replicated
            # replicas: 3
    # s0_config:
        # image: ubuntu
        # run: /bin/bash -c "apt-get update; apt-get -y install dnsutils;"